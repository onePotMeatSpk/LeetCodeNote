<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{6d8f6119-4e7e-4a46-a523-08810ea108d3}</ProjectGuid>
    <RootNamespace>LeetCodeTest</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="剪绳子2.cpp" />
    <ClCompile Include="simpletest.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="0至n-1中缺失的数字.h" />
    <ClInclude Include="includeall.h" />
    <ClInclude Include="n个筛子的点数.h" />
    <ClInclude Include="O(1)删除链表内某节点.h" />
    <ClInclude Include="三数之和.h" />
    <ClInclude Include="不用加减乘除做加法.h" />
    <ClInclude Include="两两交换链表中的节点.h" />
    <ClInclude Include="两个链表的第一个公共节点.h" />
    <ClInclude Include="两二叉树节点的最低祖先.h" />
    <ClInclude Include="两数之和 IV - 输入 BST.h" />
    <ClInclude Include="二叉搜索树的最小绝对差.h" />
    <ClInclude Include="二叉搜索树迭代器.h" />
    <ClInclude Include="二叉树.h" />
    <ClInclude Include="二叉树最左下角的值.h" />
    <ClInclude Include="二叉树深度.h" />
    <ClInclude Include="二叉树的层平均值.h" />
    <ClInclude Include="二叉树的直径.h" />
    <ClInclude Include="二叉树路径和.h" />
    <ClInclude Include="二维数组中的查找.h" />
    <ClInclude Include="全排列.h" />
    <ClInclude Include="全排列含重复元素.h" />
    <ClInclude Include="删除二叉搜索树中的节点.h" />
    <ClInclude Include="单词接龙.h" />
    <ClInclude Include="太平洋大西洋水流问题.h" />
    <ClInclude Include="寻找两个正序数组中的中位数.h" />
    <ClInclude Include="岛屿的最大面积.h" />
    <ClInclude Include="搜索旋转排序数组.h" />
    <ClInclude Include="数组中的第K个最大元素.h" />
    <ClInclude Include="最小高度树.h" />
    <ClInclude Include="最短的桥（填海造陆）.h" />
    <ClInclude Include="有序数组中的单一元素.h" />
    <ClInclude Include="根据字符出现频率排序.h" />
    <ClInclude Include="省份数量%28朋友圈%29.h" />
    <ClInclude Include="等差数列数量.h" />
    <ClInclude Include="组合.h" />
    <ClInclude Include="组合总和含重复元素.h" />
    <ClInclude Include="递增顺序搜索树.h" />
    <ClInclude Include="递增链表递增数组转化为二叉搜索树.h" />
    <ClInclude Include="修剪二叉搜索树.h" />
    <ClInclude Include="删点成林.h" />
    <ClInclude Include="删除无序链表中值重复出现的节点.h" />
    <ClInclude Include="删除链表中倒数第n个节点.h" />
    <ClInclude Include="判断数组是否二叉搜索树树后序遍历结果.h" />
    <ClInclude Include="单向链表每k个节点之间逆序.h" />
    <ClInclude Include="双向链表.h" />
    <ClInclude Include="合并两个有序的单链表.h" />
    <ClInclude Include="向有序的环形单链表中插入节点.h" />
    <ClInclude Include="和为s的两个数字.h" />
    <ClInclude Include="和为s的连续正数序列.h" />
    <ClInclude Include="圆圈中最后剩下的数字.h" />
    <ClInclude Include="奇偶链表.h" />
    <ClInclude Include="字典树前缀树（不含删除操作）.h" />
    <ClInclude Include="将单向链表按某值划分为左边小，中间相等，右边大的形式.h" />
    <ClInclude Include="将搜索二叉树转换成双向链表.h" />
    <ClInclude Include="左旋转字符串.h" />
    <ClInclude Include="序列化和反序列化二叉树.h" />
    <ClInclude Include="恢复二叉搜索树.h" />
    <ClInclude Include="所有左叶子之和.h" />
    <ClInclude Include="扑克牌中的顺子.h" />
    <ClInclude Include="打印从1到最大n位数.h" />
    <ClInclude Include="把二叉搜索树转换为累加树.h" />
    <ClInclude Include="按照左右半区的方式重新组合单链表.h" />
    <ClInclude Include="数值的整数次方.h" />
    <ClInclude Include="数组中数字出现的次数.h" />
    <ClInclude Include="数组中重复的数字.h" />
    <ClInclude Include="旋转排序数组中的最小值.h" />
    <ClInclude Include="是否对称二叉树.h" />
    <ClInclude Include="是否平衡二叉树.h" />
    <ClInclude Include="单向链表.h" />
    <ClInclude Include="左右两边子数组的和相等.h" />
    <ClInclude Include="数字在排序数组中出现的次数.h" />
    <ClInclude Include="替换空格.h" />
    <ClInclude Include="最大值减去最小值小于或等于num的子数组数量.h" />
    <ClInclude Include="最大子矩阵.h" />
    <ClInclude Include="最小栈.h" />
    <ClInclude Include="机器人的运动范围.h" />
    <ClInclude Include="剪绳子.h" />
    <ClInclude Include="树的子结构.h" />
    <ClInclude Include="根据前序数组和中序数组重建二叉树.h" />
    <ClInclude Include="根据后序数组重建二叉搜索树.h" />
    <ClInclude Include="求1+2+…+n.h" />
    <ClInclude Include="滑动窗口的最大值.h" />
    <ClInclude Include="用栈实现队列.h" />
    <ClInclude Include="用递归函数和栈逆序一个栈.h" />
    <ClInclude Include="矩阵中最大的矩形.h" />
    <ClInclude Include="矩阵中的路径.h" />
    <ClInclude Include="翻转单词顺序.h" />
    <ClInclude Include="股票的最大利润.h" />
    <ClInclude Include="较为直观地打印二叉树.h" />
    <ClInclude Include="通过前序和中序数组生成后序数组.h" />
    <ClInclude Include="部分反转链表.h" />
    <ClInclude Include="链表中的两数相加.h" />
    <ClInclude Include="队列的最大值.h" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>